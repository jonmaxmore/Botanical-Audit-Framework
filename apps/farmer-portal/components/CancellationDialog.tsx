/**
 * GACP Platform - Application Cancellation Dialog Component
 *
 * Modal dialog for cancelling applications.
 * Features:
 * - Confirmation flow with warnings
 * - No refund policy acknowledgment
 * - Cancellation reason selection
 * - Cannot undo warning
 *
 * @version 1.0.0
 * @created October 14, 2025
 */

'use client';

import { useState } from 'react';
import { AlertTriangle, X, Check, DollarSign, FileX } from 'lucide-react';

// ============================================================================
// TYPE DEFINITIONS
// ============================================================================

export interface CancellationDialogProps {
  /** Whether dialog is open */
  isOpen: boolean;

  /** Callback to close dialog */
  onClose: () => void;

  /** Application ID */
  applicationId: string;

  /** Application status */
  applicationStatus: string;

  /** Whether user has made payment */
  hasPaidFee: boolean;

  /** Amount paid (if any) */
  paidAmount?: number;

  /** Callback when cancellation is confirmed */
  onConfirm: (data: CancellationData) => Promise<void>;

  /** Loading state */
  isLoading?: boolean;
}

export interface CancellationData {
  applicationId: string;
  reason: string;
  acknowledgedNoRefund: boolean;
  additionalNotes?: string;
}

// ============================================================================
// CONSTANTS
// ============================================================================

const CANCELLATION_REASONS = [
  { value: 'changed_mind', label: '‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏à / ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠', icon: 'üîÑ' },
  { value: 'cost', label: '‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏™‡∏π‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ', icon: 'üí∞' },
  { value: 'time', label: '‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ', icon: '‚è∞' },
  { value: 'requirements', label: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏î‡πâ', icon: 'üìã' },
  { value: 'personal', label: '‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß', icon: 'üë§' },
  { value: 'other', label: '‡∏≠‡∏∑‡πà‡∏ô‡πÜ', icon: 'üìù' },
];

const NO_REFUND_POLICY = {
  message: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏Å‡∏£‡∏ì‡∏µ',
  details: [
    '‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡πÑ‡∏î‡πâ',
    '‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô',
    '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏≠‡∏ö‡∏Ñ‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å',
  ],
};

// ============================================================================
// COMPONENT
// ============================================================================

export function CancellationDialog({
  isOpen,
  onClose,
  applicationId,
  applicationStatus,
  hasPaidFee,
  paidAmount = 0,
  onConfirm,
  isLoading = false,
}: CancellationDialogProps) {
  const [step, setStep] = useState<'reason' | 'confirm' | 'success'>('reason');
  const [reason, setReason] = useState('');
  const [additionalNotes, setAdditionalNotes] = useState('');
  const [acknowledgedNoRefund, setAcknowledgedNoRefund] = useState(false);
  const [error, setError] = useState<string | null>(null);

  // Reset state when dialog opens
  const resetState = () => {
    setStep('reason');
    setReason('');
    setAdditionalNotes('');
    setAcknowledgedNoRefund(false);
    setError(null);
  };

  // Handle close
  const handleClose = () => {
    if (!isLoading) {
      resetState();
      onClose();
    }
  };

  // Handle next step
  const handleNext = () => {
    if (!reason) {
      setError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å');
      return;
    }
    setError(null);
    setStep('confirm');
  };

  // Handle back
  const handleBack = () => {
    setStep('reason');
    setError(null);
  };

  // Handle confirm
  const handleConfirm = async () => {
    if (hasPaidFee && !acknowledgedNoRefund) {
      setError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡πÑ‡∏°‡πà‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô');
      return;
    }

    try {
      await onConfirm({
        applicationId,
        reason,
        acknowledgedNoRefund: hasPaidFee ? acknowledgedNoRefund : true,
        additionalNotes: additionalNotes || undefined,
      });

      setStep('success');

      // Auto close after 2 seconds
      setTimeout(() => {
        handleClose();
      }, 2000);
    } catch (err) {
      setError(err instanceof Error ? err.message : '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
    }
  };

  // Don't render if not open
  if (!isOpen) return null;

  return (
    <>
      {/* Backdrop */}
      <div className="fixed inset-0 bg-black/50 z-40" onClick={handleClose} />

      {/* Dialog */}
      <div className="fixed inset-0 z-50 flex items-center justify-center p-4">
        <div className="bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
          {/* Header */}
          <div className="flex items-center justify-between p-6 border-b">
            <div className="flex items-center gap-3">
              <FileX className="w-7 h-7 text-red-600" />
              <h2 className="text-2xl font-bold text-gray-900">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£</h2>
            </div>
            <button
              onClick={handleClose}
              className="text-gray-500 hover:text-gray-700"
              disabled={isLoading}
              aria-label="‡∏õ‡∏¥‡∏î"
            >
              <X className="w-6 h-6" />
            </button>
          </div>

          {/* Content */}
          <div className="p-6">
            {/* Step 1: Reason Selection */}
            {step === 'reason' && (
              <>
                <div className="mb-6">
                  <h3 className="text-lg font-semibold text-gray-900 mb-2">‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</h3>
                  <p className="text-sm text-gray-600">
                    ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ô‡∏µ‡πâ
                  </p>
                </div>

                {/* Reason Options */}
                <div className="mb-6 space-y-3">
                  {CANCELLATION_REASONS.map(option => (
                    <button
                      key={option.value}
                      onClick={() => {
                        setReason(option.value);
                        setError(null);
                      }}
                      className={`w-full flex items-center gap-3 p-4 border-2 rounded-lg text-left transition-colors ${
                        reason === option.value
                          ? 'border-red-600 bg-red-50'
                          : 'border-gray-300 hover:border-gray-400'
                      }`}
                    >
                      <span className="text-2xl">{option.icon}</span>
                      <span className="flex-1 font-medium">{option.label}</span>
                      {reason === option.value && <Check className="w-5 h-5 text-red-600" />}
                    </button>
                  ))}
                </div>

                {/* Additional Notes */}
                <div className="mb-6">
                  <label className="block text-sm font-semibold text-gray-900 mb-2">
                    ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
                  </label>
                  <textarea
                    value={additionalNotes}
                    onChange={e => setAdditionalNotes(e.target.value)}
                    placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å..."
                    rows={4}
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-red-500 resize-none"
                  />
                </div>

                {/* Error Message */}
                {error && (
                  <div className="mb-6 p-4 bg-red-50 border border-red-300 rounded-lg">
                    <p className="text-sm text-red-800">{error}</p>
                  </div>
                )}
              </>
            )}

            {/* Step 2: Confirmation */}
            {step === 'confirm' && (
              <>
                {/* Warning Banner */}
                <div className="mb-6 p-4 bg-red-50 border-2 border-red-300 rounded-lg">
                  <div className="flex items-start gap-3">
                    <AlertTriangle className="w-6 h-6 text-red-600 flex-shrink-0 mt-1" />
                    <div>
                      <h3 className="font-bold text-red-900 text-lg mb-2">‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç</h3>
                      <ul className="text-sm text-red-800 space-y-1 list-disc list-inside">
                        <li>‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ</li>
                        <li>‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏∑‡πà‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏´‡∏°‡πà‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</li>
                        <li>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô</li>
                      </ul>
                    </div>
                  </div>
                </div>

                {/* No Refund Policy (if paid) */}
                {hasPaidFee && (
                  <div className="mb-6 p-4 bg-yellow-50 border-2 border-yellow-300 rounded-lg">
                    <div className="flex items-start gap-3">
                      <DollarSign className="w-6 h-6 text-yellow-600 flex-shrink-0 mt-1" />
                      <div className="flex-1">
                        <h3 className="font-bold text-yellow-900 text-lg mb-2">‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô</h3>
                        <p className="text-yellow-900 font-semibold mb-3">
                          {NO_REFUND_POLICY.message}
                        </p>
                        <ul className="text-sm text-yellow-800 space-y-1 list-disc list-inside">
                          {NO_REFUND_POLICY.details.map((detail, index) => (
                            <li key={index}>{detail}</li>
                          ))}
                        </ul>

                        {/* Amount Paid Display */}
                        <div className="mt-4 p-3 bg-white border border-yellow-400 rounded">
                          <p className="text-sm text-gray-700">
                            ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß:{' '}
                            <strong className="text-lg">
                              ‡∏ø{paidAmount.toLocaleString('th-TH')}
                            </strong>
                          </p>
                          <p className="text-xs text-red-600 mt-1">
                            ‚ö†Ô∏è ‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏∑‡∏ô‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏Å‡∏£‡∏ì‡∏µ
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                )}

                {/* Summary */}
                <div className="mb-6 p-4 bg-gray-50 border border-gray-200 rounded-lg">
                  <h3 className="font-semibold text-gray-900 mb-3">‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</h3>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span className="text-gray-600">‡∏£‡∏´‡∏±‡∏™‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£:</span>
                      <span className="font-medium">{applicationId}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-600">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</span>
                      <span className="font-medium">{applicationStatus}</span>
                    </div>
                    <div className="flex justify-between">
                      <span className="text-gray-600">‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•:</span>
                      <span className="font-medium">
                        {CANCELLATION_REASONS.find(r => r.value === reason)?.label}
                      </span>
                    </div>
                    {additionalNotes && (
                      <div className="pt-2 border-t border-gray-300">
                        <span className="text-gray-600">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:</span>
                        <p className="mt-1 text-gray-900">{additionalNotes}</p>
                      </div>
                    )}
                  </div>
                </div>

                {/* No Refund Acknowledgment Checkbox (if paid) */}
                {hasPaidFee && (
                  <div className="mb-6">
                    <label className="flex items-start gap-3 p-4 border-2 border-gray-300 rounded-lg cursor-pointer hover:bg-gray-50">
                      <input
                        type="checkbox"
                        checked={acknowledgedNoRefund}
                        onChange={e => {
                          setAcknowledgedNoRefund(e.target.checked);
                          setError(null);
                        }}
                        className="mt-1 w-5 h-5 text-red-600 border-gray-300 rounded focus:ring-red-500"
                      />
                      <div className="flex-1">
                        <p className="font-semibold text-gray-900">
                          ‡∏â‡∏±‡∏ô‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
                        </p>
                        <p className="text-sm text-gray-600 mt-1">
                          ‡∏â‡∏±‡∏ô‡∏ó‡∏£‡∏≤‡∏ö‡∏î‡∏µ‡∏ß‡πà‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡∏≥‡∏£‡∏∞‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß ‡∏ø{paidAmount.toLocaleString('th-TH')}
                          ‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏∑‡∏ô‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏Å‡∏£‡∏ì‡∏µ‡πÉ‡∏î‡πÜ
                        </p>
                      </div>
                    </label>
                  </div>
                )}

                {/* Error Message */}
                {error && (
                  <div className="mb-6 p-4 bg-red-50 border border-red-300 rounded-lg">
                    <p className="text-sm text-red-800">{error}</p>
                  </div>
                )}
              </>
            )}

            {/* Step 3: Success */}
            {step === 'success' && (
              <div className="text-center py-8">
                <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                  <Check className="w-10 h-10 text-green-600" />
                </div>
                <h3 className="text-xl font-bold text-gray-900 mb-2">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÉ‡∏ö‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</h3>
                <p className="text-gray-600">‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ...</p>
              </div>
            )}
          </div>

          {/* Footer */}
          {step === 'reason' && (
            <div className="flex items-center justify-end gap-3 p-6 border-t bg-gray-50">
              <button
                onClick={handleClose}
                className="px-6 py-2 border border-gray-300 rounded-lg font-semibold hover:bg-gray-100"
                disabled={isLoading}
              >
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              </button>
              <button
                onClick={handleNext}
                disabled={!reason || isLoading}
                className="px-6 py-2 bg-blue-600 text-white rounded-lg font-semibold hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed"
              >
                ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
              </button>
            </div>
          )}

          {step === 'confirm' && (
            <div className="flex items-center justify-between p-6 border-t bg-gray-50">
              <button
                onClick={handleBack}
                className="px-6 py-2 border border-gray-300 rounded-lg font-semibold hover:bg-gray-100"
                disabled={isLoading}
              >
                ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
              </button>
              <button
                onClick={handleConfirm}
                disabled={isLoading || (hasPaidFee && !acknowledgedNoRefund)}
                className="px-6 py-2 bg-red-600 text-white rounded-lg font-semibold hover:bg-red-700 disabled:bg-gray-300 disabled:cursor-not-allowed"
              >
                {isLoading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£...' : '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'}
              </button>
            </div>
          )}
        </div>
      </div>
    </>
  );
}

// ============================================================================
// EXPORTS
// ============================================================================

export default CancellationDialog;
