apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: gacp-production
data:
  NODE_ENV: 'production'
  PORT: '3000'
  LOG_LEVEL: 'info'

  # MongoDB Configuration
  MONGODB_MAX_POOL_SIZE: '10'
  MONGODB_SERVER_SELECTION_TIMEOUT_MS: '5000'
  MONGODB_SOCKET_TIMEOUT_MS: '45000'
  MONGODB_USE_NEW_URL_PARSER: 'true'
  MONGODB_USE_UNIFIED_TOPOLOGY: 'true'

  # Redis Configuration
  REDIS_HOST: 'redis-service'
  REDIS_PORT: '6379'

  # Session Configuration
  SESSION_COOKIE_NAME: 'gacp.sid'
  SESSION_COOKIE_SECURE: 'true'
  SESSION_COOKIE_HTTP_ONLY: 'true'
  SESSION_COOKIE_SAME_SITE: 'strict'

  # JWT Configuration
  JWT_ACCESS_EXPIRATION: '15m'
  JWT_REFRESH_EXPIRATION: '7d'

  # File Upload
  MAX_FILE_SIZE: '10485760'
  ALLOWED_FILE_TYPES: '.pdf,.jpg,.jpeg,.png'

  # Rate Limiting
  RATE_LIMIT_WINDOW_MS: '60000'
  RATE_LIMIT_MAX_REQUESTS: '100'

  # Email Configuration
  SMTP_HOST: 'smtp.sendgrid.net'
  SMTP_PORT: '587'
  SMTP_FROM_EMAIL: 'noreply@gacp-certify.com'
  SMTP_FROM_NAME: 'GACP Certify Flow'

  # AWS Configuration
  AWS_REGION: 'ap-southeast-1'
  AWS_S3_BUCKET: 'gacp-uploads-production'

  # API URLs
  NEXT_PUBLIC_API_URL: 'https://api.gacp-certify.com'
  APP_URL: 'https://admin.gacp-certify.com'

  # Feature Flags
  FEATURE_PAYMENT_PROMPTPAY: 'true'
  FEATURE_PAYMENT_CREDIT_CARD: 'true'
  FEATURE_SMS_NOTIFICATIONS: 'true'
  FEATURE_EMAIL_NOTIFICATIONS: 'true'

  # Monitoring
  SENTRY_ENVIRONMENT: 'production'
  ENABLE_METRICS: 'true'
  ENABLE_TRACING: 'true'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: gacp-production
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log /var/log/nginx/access.log main;
        
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 10M;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml text/javascript 
                   application/json application/javascript application/xml+rss 
                   application/rss+xml font/truetype font/opentype 
                   application/vnd.ms-fontobject image/svg+xml;
        
        upstream app_servers {
            least_conn;
            server gacp-app-service:3000 max_fails=3 fail_timeout=30s;
        }
        
        server {
            listen 80;
            server_name admin.gacp-certify.com;
            
            # Redirect HTTP to HTTPS
            return 301 https://$server_name$request_uri;
        }
        
        server {
            listen 443 ssl http2;
            server_name admin.gacp-certify.com;
            
            # SSL Configuration
            ssl_certificate /etc/nginx/ssl/tls.crt;
            ssl_certificate_key /etc/nginx/ssl/tls.key;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers HIGH:!aNULL:!MD5;
            ssl_prefer_server_ciphers on;
            ssl_session_cache shared:SSL:10m;
            ssl_session_timeout 10m;
            
            # Security headers
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            
            # Static files
            location /_next/static {
                proxy_pass http://app_servers;
                proxy_cache_valid 200 1y;
                add_header Cache-Control "public, immutable";
            }
            
            location /static {
                proxy_pass http://app_servers;
                proxy_cache_valid 200 1y;
                add_header Cache-Control "public, immutable";
            }
            
            # API endpoints
            location /api {
                proxy_pass http://app_servers;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_read_timeout 300s;
                proxy_connect_timeout 75s;
            }
            
            # Health check endpoint
            location /health {
                proxy_pass http://app_servers;
                access_log off;
            }
            
            # All other requests
            location / {
                proxy_pass http://app_servers;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
            }
        }
    }
