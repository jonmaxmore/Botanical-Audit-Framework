apiVersion: apps/v1
kind: Deployment
metadata:
  name: gacp-app
  namespace: gacp-production
  labels:
    app: gacp-app
    version: v1
    environment: production
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: gacp-app
  template:
    metadata:
      labels:
        app: gacp-app
        version: v1
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '3000'
        prometheus.io/path: '/api/metrics'
    spec:
      # Use private registry credentials if needed
      imagePullSecrets:
        - name: regcred

      # Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001

      # Init container for database connection check
      initContainers:
        - name: wait-for-mongodb
          image: busybox:1.35
          command:
            - 'sh'
            - '-c'
            - |
              echo "Waiting for MongoDB Atlas to be ready..."
              echo "MongoDB connection will be validated by the application"
              sleep 5
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi

      containers:
        - name: app
          image: your-registry/gacp-admin-portal:latest
          imagePullPolicy: Always

          ports:
            - name: http
              containerPort: 3000
              protocol: TCP

          # Environment variables from ConfigMap
          envFrom:
            - configMapRef:
                name: app-config
            - secretRef:
                name: app-secrets

          # Liveness probe
          livenessProbe:
            httpGet:
              path: /api/health/live
              port: 3000
              httpHeaders:
                - name: X-Health-Check
                  value: 'liveness'
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          # Readiness probe
          readinessProbe:
            httpGet:
              path: /api/health/ready
              port: 3000
              httpHeaders:
                - name: X-Health-Check
                  value: 'readiness'
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          # Startup probe (for slow-starting apps)
          startupProbe:
            httpGet:
              path: /api/health/live
              port: 3000
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 30

          # Resource limits
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi

          # Volume mounts
          volumeMounts:
            - name: uploads
              mountPath: /app/uploads
            - name: logs
              mountPath: /app/logs

          # Security context
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL

      # Volumes
      volumes:
        - name: uploads
          persistentVolumeClaim:
            claimName: app-uploads-pvc
        - name: logs
          emptyDir: {}

      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - gacp-app
                topologyKey: kubernetes.io/hostname

      # Tolerations
      tolerations:
        - key: 'node.kubernetes.io/not-ready'
          operator: 'Exists'
          effect: 'NoExecute'
          tolerationSeconds: 300
        - key: 'node.kubernetes.io/unreachable'
          operator: 'Exists'
          effect: 'NoExecute'
          tolerationSeconds: 300

---
apiVersion: v1
kind: Service
metadata:
  name: gacp-app-service
  namespace: gacp-production
  labels:
    app: gacp-app
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: 'nlb'
spec:
  type: ClusterIP
  selector:
    app: gacp-app
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gacp-app-hpa
  namespace: gacp-production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gacp-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 30
        - type: Pods
          value: 2
          periodSeconds: 30
      selectPolicy: Max

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: gacp-app-pdb
  namespace: gacp-production
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: gacp-app
