apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: gacp-production
  labels:
    app: redis
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      securityContext:
        fsGroup: 999

      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent

          command:
            - redis-server
            - /usr/local/etc/redis/redis.conf

          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP

          # Liveness probe
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          # Readiness probe
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3

          # Resources
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi

          # Volume mounts
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf

          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 999
            runAsGroup: 999

      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data-pvc
        - name: redis-config
          configMap:
            name: redis-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: gacp-production
data:
  redis.conf: |
    # Network
    bind 0.0.0.0
    protected-mode yes
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300

    # General
    daemonize no
    supervised no
    pidfile /var/run/redis.pid
    loglevel notice
    logfile ""
    databases 16

    # Snapshotting
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data

    # Replication
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    repl-disable-tcp-nodelay no
    replica-priority 100

    # Security
    # requirepass your-password-here

    # Limits
    maxclients 10000
    maxmemory 1gb
    maxmemory-policy allkeys-lru

    # Append only mode
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

    # Lua scripting
    lua-time-limit 5000

    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128

    # Latency monitor
    latency-monitor-threshold 100

    # Event notification
    notify-keyspace-events ""

    # Advanced config
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    list-max-ziplist-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
    hll-sparse-max-bytes 3000
    stream-node-max-bytes 4096
    stream-node-max-entries 100
    activerehashing yes
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    hz 10
    dynamic-hz yes
    aof-rewrite-incremental-fsync yes
    rdb-save-incremental-fsync yes

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: gacp-production
  labels:
    app: redis
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
    - name: redis
      protocol: TCP
      port: 6379
      targetPort: 6379
  sessionAffinity: ClientIP

---
# Redis Sentinel for High Availability (Optional)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel
  namespace: gacp-production
  labels:
    app: redis-sentinel
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis-sentinel
  template:
    metadata:
      labels:
        app: redis-sentinel
    spec:
      containers:
        - name: sentinel
          image: redis:7-alpine
          command:
            - redis-sentinel
            - /usr/local/etc/redis/sentinel.conf
          ports:
            - name: sentinel
              containerPort: 26379
              protocol: TCP
          volumeMounts:
            - name: sentinel-config
              mountPath: /usr/local/etc/redis/sentinel.conf
              subPath: sentinel.conf
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
      volumes:
        - name: sentinel-config
          configMap:
            name: redis-sentinel-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel-config
  namespace: gacp-production
data:
  sentinel.conf: |
    port 26379
    sentinel monitor mymaster redis-service 6379 2
    sentinel down-after-milliseconds mymaster 5000
    sentinel parallel-syncs mymaster 1
    sentinel failover-timeout mymaster 10000
    sentinel deny-scripts-reconfig yes

---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel-service
  namespace: gacp-production
  labels:
    app: redis-sentinel
spec:
  type: ClusterIP
  selector:
    app: redis-sentinel
  ports:
    - name: sentinel
      protocol: TCP
      port: 26379
      targetPort: 26379
